{"version":3,"sources":["../../src/test/test.js"],"names":["babel","install","describe","run","description","dir","opts","it","fixturePath","resolve","__dirname","outputPath","expected","readFileSync","toString","pluginInfo","babelResult","transformFileSync","plugins","plugin","libFsIdentifier","filesystemModules","todosFsModule","parserOpts","sourceType","allowImportExportEverywhere","babelrc","actual","code","should","deepEqual","tests","test"],"mappings":";;;;AAAA;;;;AACA;;IAAYA,K;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA,2BAAiBC,OAAjB;;AAEAC,SAAS,0BAAT,EAAqC,YAAM;AACzC,WAASC,GAAT,OAAuC;AAAA;AAAA,QAAzBC,WAAyB;AAAA,QAAZC,GAAY;AAAA,QAAPC,IAAO;;AACrCC,YAAMH,WAAN,EAAqB,YAAM;AACzB,UAAMI,cAAc,eAAKC,OAAL,CAClBC,SADkB,EAElB,UAFkB,EAGlBL,GAHkB,eAApB;AAMA,UAAMM,aAAa,eAAKF,OAAL,CAAaC,SAAb,EAAwB,UAAxB,EAAoCL,GAApC,cAAnB;AACA,UAAMO,WAAW,aACdC,YADc,CACDH,4BAAyBL,GAAzB,kBADC,EAEdS,QAFc,EAAjB;AAGA,UAAMC,aAAa,wBAAWT,IAAX,CAAnB;;AAEA,UAAMU,cAAchB,MAAMiB,iBAAN,CAAwBT,WAAxB,EAAqC;AACvDU,iBAAS,CACP,CACEH,WAAWI,MADb,EAEE;AACEC,2BAAiB,QADnB;AAEEC,6BAAmB;AACjBC,2BAAe;AADE;AAFrB,SAFF,CADO,EAUP,8BAVO,CAD8C;AAavDC,oBAAY;AACVC,sBAAY,QADF;AAEVC,uCAA6B;AAFnB,SAb2C;AAiBvDC,iBAAS;AAjB8C,OAArC,CAApB;AAmBA,UAAMC,SAASX,YAAYY,IAAZ,GAAmB,IAAlC;AACAD,aAAOE,MAAP,CAAcC,SAAd,CAAwBlB,QAAxB;AACD,KAlCD;AAmCD;;AAED,MAAMmB,QAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAC,YAAD,EAAe,YAAf,CATY,CAAd;;AAvCyC;AAAA;AAAA;;AAAA;AAmDzC,yBAAmBA,KAAnB,8HAA0B;AAAA,UAAfC,IAAe;;AACxB7B,UAAI6B,IAAJ;AACD;AArDwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsD1C,CAtDD","file":"test.js","sourcesContent":["import should from \"should\";\nimport * as babel from \"babel-core\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport makePlugin from \"../fs-plugin\";\nimport sourceMapSupport from \"source-map-support\";\n\nsourceMapSupport.install();\n\ndescribe(\"isotropy-ast-analyzer-fs\", () => {\n  function run([description, dir, opts]) {\n    it(`${description}`, () => {\n      const fixturePath = path.resolve(\n        __dirname,\n        \"fixtures\",\n        dir,\n        `fixture.js`\n      );\n      const outputPath = path.resolve(__dirname, \"fixtures\", dir, `output.js`);\n      const expected = fs\n        .readFileSync(__dirname + `/fixtures/${dir}/expected.js`)\n        .toString();\n      const pluginInfo = makePlugin(opts);\n\n      const babelResult = babel.transformFileSync(fixturePath, {\n        plugins: [\n          [\n            pluginInfo.plugin,\n            {\n              libFsIdentifier: \"ispyFs\",\n              filesystemModules: {\n                todosFsModule: \"./dist/test/fixtures/my-fs\"\n              }\n            }\n          ],\n          \"transform-object-rest-spread\"\n        ],\n        parserOpts: {\n          sourceType: \"module\",\n          allowImportExportEverywhere: true\n        },\n        babelrc: false\n      });\n      const actual = babelResult.code + \"\\n\";\n      actual.should.deepEqual(expected);\n    });\n  }\n\n  const tests = [\n    // [\"create-file\", \"create-file\"],\n    // [\"read-file\", \"read-file\"],\n    // [\"update-file\", \"update-file\"],\n    // [\"get-files\", \"get-files\"],\n    // [\"get-files-recursive\", \"get-files-recursive\"],\n    // [\"move-file\", \"move-file\"],\n    // [\"move-dir\", \"move-dir\"],\n    // [\"delete-file\", \"delete-file\"],\n    [\"delete-dir\", \"delete-dir\"]\n  ];\n\n  for (const test of tests) {\n    run(test);\n  }\n});\n"]}