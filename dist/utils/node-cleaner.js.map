{"version":3,"sources":["../../src/utils/node-cleaner.js"],"names":["clean","obj","Array","isArray","map","o","newObj","key","includes"],"mappings":";;;;;;;;kBAAwBA,K;AAAT,SAASA,KAAT,CAAeC,GAAf,EAAoB;AACjC,MAAI,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;AAC3B,WAAOA,GAAP;AACD,GAFD,MAEO;AACL,QAAIC,MAAMC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AACtB,aAAOA,IAAIG,GAAJ,CAAQ;AAAA,eAAKJ,MAAMK,CAAN,CAAL;AAAA,OAAR,CAAP;AACD,KAFD,MAEO;AACL,UAAMC,SAAS,EAAf;AACA,WAAK,IAAMC,GAAX,IAAkBN,GAAlB,EAAuB;AACrB,YACE,CAAC,CACC,OADD,EAEC,KAFD,EAGC,KAHD,EAIC,UAJD,EAKC,WALD,EAMC,OAND,EAOC,SAPD,EAQC,MARD,EASCO,QATD,CASUD,GATV,CADH,EAWE;AACAD,iBAAOC,GAAP,IAAcP,MAAMC,IAAIM,GAAJ,CAAN,CAAd;AACD;AACF;AACD,aAAOD,MAAP;AACD;AACF;AACF","file":"node-cleaner.js","sourcesContent":["export default function clean(obj) {\n  if (typeof obj !== \"object\") {\n    return obj;\n  } else {\n    if (Array.isArray(obj)) {\n      return obj.map(o => clean(o));\n    } else {\n      const newObj = {};\n      for (const key in obj) {\n        if (\n          ![\n            \"start\",\n            \"end\",\n            \"loc\",\n            \"computed\",\n            \"shorthand\",\n            \"extra\",\n            \"__clone\",\n            \"path\"\n          ].includes(key)\n        ) {\n          newObj[key] = clean(obj[key]);\n        }\n      }\n      return newObj;\n    }\n  }\n}\n"]}