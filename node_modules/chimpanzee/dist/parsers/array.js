"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (schema) {
  return function (obj, key, parents, parentKeys) {
    return function (context) {
      return Array.isArray(obj) ? schema.value.length !== obj.length ? new _results.Skip(`Expected array of length ${schema.value.length} but got ${obj.length}.`, {
        obj,
        key,
        parents,
        parentKeys
      }) : function () {
        const results = _lazily.Seq.of(schema.value).reduce(function (acc, childSource, i) {
          const childSchema = (0, _literals.wrapSchemaIfLiteralChild)(schema, childSource);

          const result = (0, _parse2.default)(childSchema)(obj[i], `${key}.${i}`, parents.concat(obj), parentKeys.concat(key))(context);

          return result instanceof _results.Skip || result instanceof _results.Fault ? result : acc.concat(result);
        }, [], function (acc, item) {
          return acc instanceof _results.Skip || acc instanceof _results.Fault;
        });

        const last = results.slice(-1)[0];

        return last instanceof _results.Skip || last instanceof _results.Fault ? last : function () {
          const resultArr = results.filter(function (r) {
            return r instanceof _results.Match;
          }).map(function (r) {
            return r.value;
          });
          const modifyResult = schema.params.build;
          return modifyResult ? function () {
            const output = modifyResult(resultArr);
            return output instanceof _results.Result ? output : new _results.Match(output, { obj, key, parents, parentKeys });
          }() : resultArr.length ? new _results.Match(resultArr, { obj, key, parents, parentKeys }) : new _results.Empty({ obj, key, parents, parentKeys });
        }();
      }() : new _results.Skip(`Schema is an array but property is a non-array.`, {
        obj,
        key,
        parents,
        parentKeys
      });
    };
  };
};

var _lazily = require("lazily");

var _results = require("../results");

var _parse = require("../parse");

var _parse2 = _interopRequireDefault(_parse);

var _schemas = require("../schemas");

var _literals = require("./literals");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
//# sourceMappingURL=array.js.map