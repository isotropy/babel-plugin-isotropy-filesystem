"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapSchemaIfLiteralChild = wrapSchemaIfLiteralChild;

var _schemas = require("../schemas");

function wrapSchemaIfLiteralChild(schema, childSource) {
  // Value and property modifiers pass through literal containers ({} and []).
  const modifiersForLiteralChildren = schema.params && schema.params.modifiers ? {
    modifiers: {
      value: schema.params.modifiers.value,
      property: schema.params.modifiers.property
    }
  } : { modifiers: {} };

  // child is { ... }
  const isChildLiteralObject = typeof childSource === "object" && childSource.constructor === Object;

  return isChildLiteralObject ? new _schemas.ObjectSchema(childSource, modifiersForLiteralChildren) : Array.isArray(childSource) ? new _schemas.ArraySchema(childSource, modifiersForLiteralChildren) : typeof childSource === "string" || typeof childSource === "number" || typeof childSource === "boolean" || typeof childSource === "symbol" ? new _schemas.PrimitiveSchema(childSource, modifiersForLiteralChildren) : childSource;
} /*       */
//# sourceMappingURL=literals.js.map