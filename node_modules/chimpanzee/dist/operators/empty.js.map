{"version":3,"sources":["../../src/operators/empty.js"],"names":["empty","meta","type","fn","obj","key","parents","parentKeys","undefined"],"mappings":";;;;;QAKgBA,K,GAAAA,K;;AAJhB;;AACA;;AACA;;AAEO,SAASA,KAAT,GAAiB;AACtB,QAAMC,OAAO,EAAEC,MAAM,OAAR,EAAb;;AAEA,WAASC,EAAT,CAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,UAA/B,EAA2C;AACzC,WAAO;AAAA,aACLH,QAAQI,SAAR,GACI,mBAAU,EAAEJ,GAAF,EAAOC,GAAP,EAAYC,OAAZ,EAAqBC,UAArB,EAAV,EAA6CN,IAA7C,CADJ,GAEI,kBAAS,YAAT,EAAuB,EAAEG,GAAF,EAAOC,GAAP,EAAYC,OAAZ,EAAqBC,UAArB,EAAvB,EAA0DN,IAA1D,CAHC;AAAA,KAAP;AAID;;AAED,SAAO,4BAAmBE,EAAnB,EAAuB,sBAAU,EAAV,CAAvB,EAAsCF,IAAtC,CAAP;AACD,C,CAhBD","file":"empty.js","sourcesContent":["/*       */\nimport { Match, Empty, Skip, Fault } from \"../results\";\nimport { FunctionSchema } from \"../schemas\";\nimport { getParams } from \"./utils\";\n\nexport function empty() {\n  const meta = { type: \"empty\" };\n\n  function fn(obj, key, parents, parentKeys) {\n    return context =>\n      obj === undefined\n        ? new Empty({ obj, key, parents, parentKeys }, meta)\n        : new Skip(\"Not empty.\", { obj, key, parents, parentKeys }, meta);\n  }\n\n  return new FunctionSchema(fn, getParams({}), meta);\n}\n"]}