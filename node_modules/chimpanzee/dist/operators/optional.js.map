{"version":3,"sources":["../../src/operators/optional.js"],"names":["optional","schema","params","meta","type","fn","obj","key","parents","parentKeys","result","context"],"mappings":";;;;;QAMgBA,Q,GAAAA,Q;;AALhB;;AACA;;AACA;;;;AACA;;;;AAJA;AAMO,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,SAAS,EAAnC,EAAuC;AAC5C,QAAMC,OAAO,EAAEC,MAAM,UAAR,EAAoBH,MAApB,EAA4BC,MAA5B,EAAb;;AAEA,WAASG,EAAT,CAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,UAA/B,EAA2C;AACzC,WAAO,mBAAW;AAChB,YAAMC,SAAS,qBAAMT,MAAN,EAAcK,GAAd,EAAmBC,GAAnB,EAAwBC,OAAxB,EAAiCC,UAAjC,EAA6CE,OAA7C,CAAf;AACA,aAAO,EAAED,+BAAF,IACHA,MADG,GAEH,mBAAU,EAAEJ,GAAF,EAAOC,GAAP,EAAYC,OAAZ,EAAqBC,UAArB,EAAV,EAA6CN,IAA7C,CAFJ;AAGD,KALD;AAMD;;AAED,SAAO,4BAAmBE,EAAnB,EAAuB,sBAAUH,MAAV,CAAvB,EAA0CC,IAA1C,CAAP;AACD","file":"optional.js","sourcesContent":["/*       */\nimport { Match, Empty, Skip, Fault } from \"../results\";\nimport { FunctionSchema } from \"../schemas\";\nimport parse from \"../parse\";\nimport { getParams } from \"./utils\";\n\nexport function optional(schema, params = {}) {\n  const meta = { type: \"optional\", schema, params };\n\n  function fn(obj, key, parents, parentKeys) {\n    return context => {\n      const result = parse(schema)(obj, key, parents, parentKeys)(context);\n      return !(result instanceof Skip)\n        ? result\n        : new Empty({ obj, key, parents, parentKeys }, meta);\n    };\n  }\n\n  return new FunctionSchema(fn, getParams(params), meta);\n}\n"]}