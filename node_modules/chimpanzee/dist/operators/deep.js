"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deep = deep;

var _lazily = require("lazily");

var _results = require("../results");

var _schemas = require("../schemas");

var _parse = require("../parse");

var _parse2 = _interopRequireDefault(_parse);

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function deep(schema, params = {}) {
  const meta = { type: "deep", schema, params };

  function fn(obj, key, parents, parentKeys) {
    return function (context) {
      function traverseObject(keys) {
        return keys.length ? function () {
          const result = (0, _parse2.default)(deep(schema))(obj[keys[0]], key, parents.concat(obj), parentKeys.concat(keys[0]))(context);
          return !(result instanceof _results.Skip) ? result : traverseObject(keys.slice(1));
        }() : new _results.Skip("Not found in deep.", { obj, key, parents, parentKeys }, meta);
      }

      function traverseArray(items) {
        return items.length ? function () {
          const result = (0, _parse2.default)(deep(schema, params))(items[0], key, parents, parentKeys)(context);
          return !(result instanceof _results.Skip) ? result : traverseArray(items.slice(1));
        }() : new _results.Skip("Not found in deep.", { obj, key, parents, parentKeys }, meta);
      }

      const result = (0, _parse2.default)(schema)(obj, key, parents, parentKeys)(context);

      return !(result instanceof _results.Skip) ? result : typeof obj === "object" ? traverseObject(Object.keys(obj)) : Array.isArray(obj) ? traverseArray(obj) : new _results.Skip("Not found in deep.", { obj, key, parents, parentKeys }, meta);
    };
  }

  return new _schemas.FunctionSchema(fn, (0, _utils.getParams)(params), meta);
} /*       */
//# sourceMappingURL=deep.js.map