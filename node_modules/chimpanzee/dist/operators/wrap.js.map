{"version":3,"sources":["../../src/operators/wrap.js"],"names":["wrap","schema","params","meta","fn","obj","key","parents","parentKeys","context"],"mappings":";;;;;QAKgBA,I,GAAAA,I;;AAJhB;;AACA;;;;AACA;;;;AAEO,SAASA,IAAT,CAAcC,MAAd,EAAsBC,MAAtB,EAA8B;AACnC,QAAMC,OAAO,EAAEF,MAAF,EAAUC,MAAV,EAAb;;AAEA,WAASE,EAAT,CAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,OAAtB,EAA+BC,UAA/B,EAA2C;AACzC,WAAO;AAAA,aAAW,qBAAMP,MAAN,EAAcI,GAAd,EAAmBC,GAAnB,EAAwBC,OAAxB,EAAiCC,UAAjC,EAA6CC,OAA7C,CAAX;AAAA,KAAP;AACD;;AAED,SAAO,4BAAmBL,EAAnB,EAAuB,sBAAUF,MAAV,CAAvB,EAA0CC,IAA1C,CAAP;AACD,C,CAbD","file":"wrap.js","sourcesContent":["/*       */\nimport { FunctionSchema } from \"../schemas\";\nimport parse from \"../parse\";\nimport { getParams } from \"./utils\";\n\nexport function wrap(schema, params) {\n  const meta = { schema, params };\n\n  function fn(obj, key, parents, parentKeys) {\n    return context => parse(schema)(obj, key, parents, parentKeys)(context);\n  }\n\n  return new FunctionSchema(fn, getParams(params), meta);\n}\n"]}