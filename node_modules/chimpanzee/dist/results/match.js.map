{"version":3,"sources":["../../src/results/match.js"],"names":["Match","constructor","value","env","meta","global","__chimpanzeeTestContext","push","updateEnv","args"],"mappings":";;;;;;;;AACA;;;;;;AAEe,MAAMA,KAAN,0BAAoC;;AAGjDC,cAAYC,KAAZ,EAA6BC,GAA7B,EAA2CC,IAA3C,EAA0D;AACxD,UAAMD,GAAN,EAAWC,IAAX;AACA,SAAKF,KAAL,GAAaA,KAAb;;AAEA;AACA,QAAIG,OAAOC,uBAAX,EAAoC;AAClCD,aAAOC,uBAAP,CAA+BC,IAA/B,CAAoC,IAApC;AACD;AACF;;AAEDC,YAAUC,IAAV,EAAwC;AACtC,WAAO,IAAIT,KAAJ,CACL,KAAKE,KADA,EAEL,OAAO,KAAKC,GAAZ,KAAoB,WAApB,gBAAuC,KAAKA,GAA5C,EAAoDM,IAApD,IAA6DA,IAFxD,EAGL,KAAKL,IAHA,CAAP;AAKD;AAnBgD;kBAA9BJ,K","file":"match.js","sourcesContent":["/* @flow */\nimport Result from \"./result\";\n\nexport default class Match<TResult> extends Result {\n  value: ?TResult;\n\n  constructor(value: ?TResult, env: ?Object, meta: ?Object) {\n    super(env, meta);\n    this.value = value;\n\n    //Unit test support\n    if (global.__chimpanzeeTestContext) {\n      global.__chimpanzeeTestContext.push(this);\n    }\n  }\n\n  updateEnv(args: Object): Match<TResult> {\n    return new Match(\n      this.value,\n      typeof this.env !== \"undefined\" ? { ...this.env, ...args } : args,\n      this.meta\n    );\n  }\n}\n"]}